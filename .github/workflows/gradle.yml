# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build with Gradle

    runs-on: ubuntu-latest

    services:

      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
        ports:
          - 3307:3306

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        id: build-and-analyse
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info

      - name: Store app artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-jar-file
          path: build/libs/toko-*.jar

      - name: Build and push image
        id: build-and-push-image
        if: ${{ github.ref == 'refs/heads/master' }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD:  ${{ secrets.DOCKER_PASSWORD }}
        run: ./gradlew bootBuildImage --info

  deploy:
    name: Deploy to AWS Elastic Beanstalk

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Display AWS CLI version
        run: |
          aws --version
      - name: Add config file
        run: |
          cd ~
          mkdir .aws
          cd .aws
          echo "[default]" >> config
          echo "region=us-east-1" >> config
      - name: Add credentials file
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          cd ~
          mkdir -p .aws
          cd .aws
          echo "[default]" >> credentials
          echo "aws_access_key_id=$AWS_ACCESS_KEY" >> credentials
          echo "aws_secret_access_key=$AWS_SECRET_KEY" >> credentials
      - name: Display AWS CLI confgiuration
        run: |
          aws configure list

      - name: Download app artifact
        uses: actions/download-artifact@v2
        with:
          name: app-jar-file

      - name: Upload app artifact to S3 bucket
        run: |
          aws s3 cp toko-*.jar s3://$AWS_S3_BUCKET
