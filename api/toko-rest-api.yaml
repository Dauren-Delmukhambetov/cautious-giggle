openapi: 3.0.1
info:
  title: Toko REST API
  description: Toko REST API methods description
  contact:
    email: dauren.del@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: https://api.toko.kz/v1
tags:
  - name: Products
    description: Product API to manage user's product catalog
  - name: Users
    description: Operations about user
paths:
  ## Products API
  /products:
    get:
      tags:
        - Products
      summary: Retrieve all products
      operationId: getProducts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags:
        - Products
      summary: Creates a new product
      operationId: createProduct
      requestBody:
        description: New product creation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
      responses:
        201:
          description: New product has been successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{id}/image:
    post:
      tags:
        - Products
      summary: Uploads the product image
      description: >
        This method allows you to upload an image and set it as a cover image for the product with a given `id`.
        In case there is already an image for the product it will be replaced by the new one
      operationId: uploadImage
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Product's image file
        content:
          image/png:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
      responses:
        201:
          description: Image has been successfully uploaded and bound to the product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Link'
  ## Users API
  /users:
    post:
      tags:
        - Users
      summary: Create user
      description: This method creates a new user.
      operationId: createUser
      requestBody:
        description: Create user request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        200:
          description: OK
          content: {}
components:
  schemas:
    ## Products model
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        imageLink:
          type: string
          format: uri
        name:
          type: string
        price:
          type: number
          format: double
    CreateProductRequest:
      type: object
      properties:
        name:
            type: string
        price:
            type: number
            format: double
        imageLink:
          type: string
          format: uri
      required:
        - name
        - price
      example:
        name: ASU Газированная РЕТ 1л
        price: 200
        imageLink: https://api.rgbrands.com/uploads/0/2369-2268_a_su_gaz_1.png

    ## Users model
    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
          pattern: '^[A-Za-z\-_]$'
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        phone:
          type: string

    ## Common model
    Link:
      type: object
      properties:
        link:
          type: string
          format: uri
